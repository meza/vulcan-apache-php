#!/bin/bash

export BUILD_ROOT=`pwd`;

export HTTPD_VERSION=2.4.10
export PHP_VERSION=5.5.9
export APR_VERSION=1.5.1
export APR_UTIL_VERSION=1.5.4
export PCRE_VERSION=8.34
export PYTHON_VERSION=2.7.5
export GPERF_VERSION=3.0.4
export NCURSES_VERSION=5.9
export NODE_VERSION=0.10.26

mkdir -p /app/vendor


export BUILD_ROOT=`pwd`;
export BUILD_DIR=$BUILD_ROOT/httpd-$HTTPD_VERSION

clean() {
    rm -rf *.tar.gz*
    rm -rf *.tgz
}

pcre() {
    rm -rf pcre-$PCRE_VERSION
    echo "Downloading pcre $PCRE VERSION"
    curl -k --progress-bar -L -O ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-$PCRE_VERSION.tar.gz
    tar -xzvf pcre-$PCRE_VERSION.tar.gz

    cd pcre-$PCRE_VERSION
    export PCRE_DIR=/app/vendor/pcre
    ./configure --prefix=$PCRE_DIR
    make
    make install
    cd ..
}

apache() {
    pcre
    rm -rf httpd-$HTTPD_VERSION
    echo "Downloading apache $VERSION"
    curl -k --progress-bar -L -O http://mirrors.ukfast.co.uk/sites/ftp.apache.org//httpd/httpd-$HTTPD_VERSION.tar.gz
    echo "Downloading apache-apr $APR_VERSION"
    curl -k --progress-bar -L -O http://mirror.ox.ac.uk/sites/rsync.apache.org//apr/apr-$APR_VERSION.tar.gz
    echo "Downloading apache-apr-util $APR_UTIL_VERSION"
    curl -k --progress-bar -L -O http://mirrors.ukfast.co.uk/sites/ftp.apache.org//apr/apr-util-$APR_UTIL_VERSION.tar.gz

    tar -xzvf httpd-$HTTPD_VERSION.tar.gz
    tar -xzvf apr-$APR_VERSION.tar.gz
    tar -xzvf apr-util-$APR_UTIL_VERSION.tar.gz

    mv $BUILD_ROOT/apr-$APR_VERSION $BUILD_ROOT/httpd-$HTTPD_VERSION/srclib/apr
    mv $BUILD_ROOT/apr-util-$APR_UTIL_VERSION $BUILD_ROOT/httpd-$HTTPD_VERSION/srclib/apr-util

    cd httpd-$HTTPD_VERSION
    ./configure --prefix=/app/apache --with-apr=`pwd`/srclib/apr --with-included-apr --with-pcre=$PCRE_DIR --with-mpm=prefork \
    --with-suexec-docroot=/app/www \
    --disable-charset-lite \
    --disable-include \
    --disable-setenvif \
    --disable-status \
    --disable-autoindex \
    --disable-asis \
    --disable-cgi \
    --disable-negotiation \
    --disable-imap \
    --disable-actions \
    --disable-userdir \
    --disable-alias \
    --enable-env \
    --enable-mods-shared \
    --enable-deflate \
    --enable-expies \
    --enable-rewrite \
    --enable-ssl \
    --enable-vhost-alias \
    --enable-modules='unixd access_compat filter env deflate rewrite auth_basic'

    make
    make install
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/app/apache/lib
    cd ..
    mkdir /app/www
}

openssl() {
    cd $BUILD_ROOT
	curl -k --progress-bar -L -O http://www.openssl.org/source/openssl-1.0.1j.tar.gz
	curl -k --progress-bar -L -O http://www.linuxfromscratch.org/patches/blfs/svn/openssl-1.0.1j-fix_parallel_build-1.patch
	tar -xzvf openssl-1.0.1j.tar.gz
	pushd .
	cd openssl-1.0.1j
	patch -Np1 -i ../openssl-1.0.1j-fix_parallel_build-1.patch
	./config --prefix=/app/vendor/ssl --openssldir=/etc/ssl --libdir=lib shared zlib-dynamic
	make
	make install
	popd
}

php() {
    cd $BUILD_ROOT
    rm -rf php-$PHP_VERSION
    echo "Downloading php $PHP_VERSION"
    curl -k --progress-bar -L -o php-$PHP_VERSION.tar.gz http://uk1.php.net/get/php-$PHP_VERSION.tar.gz/from/this/mirror
    tar -xzvf php-$PHP_VERSION.tar.gz
    cd php-$PHP_VERSION
    ./configure --prefix=/app/php --with-apxs2=/app/apache/bin/apxs \
    --with-config-file-scan-dir=/app/www/.php \
    --with-mpm=worker \
    --with-bz2 \
    --with-curl \
    --with-openssl=/app/vendor/ssl \
    --with-zlib-dir \
    --with-zlib \
    --with-pcre-regex=/app/vendor/pcre \
    --without-sqlite \
    --without-mysql \
    --enable-opcache \
    --enable-fpm
    make
    make install
    cd ..

    /app/php/bin/pecl install mongo
    chmod 755 /app/php/lib/php/extensions/no-debug-non-zts-20121212/mongo.so
}

node() {
    cd $BUILD_ROOT
	rm -rf node-v$NODE_VERSION
	echo "Downloading node $NODE_VERSION"
	curl -k --progress-bar -L -O http://nodejs.org/dist/v0.10.26/node-v$NODE_VERSION.tar.gz

	tar -xzvf node-v$NODE_VERSION.tar.gz
	cd node-v$NODE_VERSION
	./configure --prefix=/app/node
	make
	make install
	cd ..
	/app/node/bin/npm install -g grunt \
	grunt-cli \
	sass \
	yuicompressor \
	sqwish \
	node-minify

}

clean

apache
#openssl
#php
#node

clean
